{
  "swagger": "2.0",
  "info": {
    "title": "Tollminder API",
    "version": "0.0.1"
  },
  "schemes": [
    "http"
  ],
  "basePath": "/api/",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/{_id}": {
      "get": {
        "description": "Get user by _id",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Update user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "description": "Register user in system",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUpFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "description": "Auth user in system",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignInFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/signout/{_id}": {
      "delete": {
        "description": "Sign out",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/file": {
      "post": {
        "description": "Add file",
        "tags": [
          "File"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The uploaded file data",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Link to your file",
            "schema": {
              "type": "object",
              "properties": {
                "link": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sync/{lastSync}": {
      "get": {
        "description": "Sync databases",
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "path",
            "type": "number",
            "description": "Timestamp in ms",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Array of modified roads",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TollRoad"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/validator/phone": {
      "post": {
        "description": "Phone number existence check",
        "tags": [
          "Validator"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "Phone number for validation"
          },
          {
            "name": "code",
            "in": "formData",
            "required": true,
            "type" : "number",
            "description": "Code from SMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/validator/email/{_id}": {
      "get": {
        "description": "Phone number existence check",
        "tags": [
          "Validator"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type" : "string",
            "description": "User id"
          },
          {
            "name": "hash",
            "in": "query",
            "required": true,
            "type" : "string",
            "description": "hash"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier."
        },
        "name": {
          "type": "string",
          "description": "User name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "password": {
          "type": "string",
          "description": "User password sha256 hash"
        },
        "phone": {
          "type": "string",
          "description": "User phone"
        },
        "photo": {
          "type": "string",
          "description": "link to image"
        },
        "token": {
          "type": "string",
          "description": "Auth token"
        },
        "sourse": {
          "type": "string",
          "description": "Source can takes the following values:\nepp - self registration with email, phone and password;\ngplus - OAuth2 from Google+;\nfacebook - OAuth from Facebook;\n"
        }
      }
    },
    "SignUpFields": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "User name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "password": {
          "type": "string",
          "description": "User password"
        },
        "phone": {
          "type": "string",
          "description": "User phone"
        },
        "photo": {
          "type": "string",
          "description": "link to image"
        },
        "sourse": {
          "type": "string",
          "description": "Source can takes the following values:\nepp - self registration with email, phone and password;\ngplus - OAuth2 from Google+;\nfacebook - OAuth from Facebook;\n"
        }
      }
    },
    "SignInFields": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "description": "User phone"
        },
        "password": {
          "type": "string",
          "description": "User password"
        }
      }
    },
    "TollRoad": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Road name"
        },
        "wayPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WayPoint"
          }
        }
      }
    },
    "WayPoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "WayPoint name"
        },
        "latitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "longitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "tollPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TollPoint"
          }
        }
      }
    },
    "TollPoint": {
      "type": "object",
      "properties": {
        "_wayPoint": {
          "type": "string",
          "description": "WayPoint id"
        },
        "name": {
          "type": "string",
          "description": "TollPoint name"
        },
        "latitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "longitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "err": {
          "type": "string"
        }
      }
    }
  }
}