{
  "swagger": "2.0",
  "info": {
    "title": "Tollminder API",
    "version": "0.0.1"
  },
  "schemes": [
    "https"
  ],
  "basePath": "/api/",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/{_id}": {
      "get": {
        "description": "Get user by _id",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Update user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{_id}/token": {
      "get": {
        "description": "Validate mobile token",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "description": "Register user in system",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUpFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "302": {
            "description": "Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "description": "Auth user in system",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignInFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/oauth": {
      "post": {
        "description": "Sign in for social networks",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "source",
            "in": "formData",
            "description": "facebook or gplus",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "$ref" : "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/user/signout/{_id}": {
      "delete": {
        "description": "Sign out",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/file": {
      "post": {
        "description": "Add file",
        "tags": [
          "File"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The uploaded file data",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Link to your file",
            "schema": {
              "type": "object",
              "properties": {
                "link": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/file/paymentHistoryPdf": {
      "post": {
        "description": "Get link to payment history pdf file",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "in range object: 'from' and 'to' params take DateTime strings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentHistoryFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Link to your file",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tollRoad/{_id}" : {
      "get": {
        "description": "Get tollroad by _id",
        "tags": [
          "TollRoad"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Toll road",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTollRoadResponse"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Update tollroad",
        "tags": [
          "TollRoad"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "Road name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Toll road",
            "schema": {
              "$ref": "#/definitions/CreateTollRoadResponse"

            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete tollroad",
        "tags": [
          "TollRoad"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tollRoad" : {
      "get": {
        "description": "Get All tollRoads",
        "tags": [
          "TollRoad"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of toll roads",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTollRoadResponse"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Create tollroad",
        "tags": [
          "TollRoad"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "Road name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of toll roads",
            "schema": {
              "$ref": "#/definitions/CreateTollRoadResponse"

            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wayPoint/{_id}" : {
      "get": {
        "description": "Get wayPoint by _id",
        "tags": [
          "WayPoint"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "WayPoint",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WayPoint"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Update wayPoint",
        "tags": [
          "WayPoint"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "WayPoint name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Toll road",
            "schema": {
              "$ref": "#/definitions/WayPoint"

            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete wayPoint",
        "tags": [
          "WayPoint"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wayPoint" : {
      "post": {
        "description": "Create wayPoint",
        "tags": [
          "WayPoint"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "WayPoint name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "WayPoint",
            "schema": {
              "$ref": "#/definitions/WayPoint"

            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tollPoint/{_id}" : {
      "put": {
        "description": "Update tollPoint",
        "tags": [
          "TollPoint"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "TollPoint name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "action",
            "in": "formData",
            "required": "true",
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Toll Point",
            "schema": {
              "$ref": "#/definitions/TollPoint"

            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete tollPoint",
        "tags": [
          "TollPoint"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tollPoint" : {
      "post": {
        "description": "Create tollPoint",
        "tags": [
          "TollPoint"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "description": "TollPoint name",
            "required": "true",
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "formData",
            "required": "true",
            "type": "number"
          },
          {
            "name": "action",
            "in": "formData",
            "required": "true",
            "type": "string"
          },
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "new tollPoint",
            "schema": {
              "$ref": "#/definitions/TollPoint"

            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sync/{lastSync}": {
      "get": {
        "description": "Sync databases",
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "path",
            "type": "number",
            "description": "Timestamp in ms",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of modified roads",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TollRoad"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/validator/phone": {
      "post": {
        "description": "Phone number existence check",
        "tags": [
          "Validator"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "Phone number for validation"
          },
          {
            "name": "code",
            "in": "formData",
            "required": true,
            "type" : "number",
            "description": "Code from SMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/validator/email/{_id}": {
      "get": {
        "description": "Phone number existence check",
        "tags": [
          "Validator"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type" : "string",
            "description": "User id"
          },
          {
            "name": "hash",
            "in": "query",
            "required": true,
            "type" : "string",
            "description": "hash"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/trip": {
      "post": {
        "description": "Create trip",
        "tags": [
          "Trip"
        ],
        "parameters": [
          {
            "name": "_user",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "User id"
          },
          {
            "name": "_startWayPoint",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "WayPoint id"
          },
          {
            "name": "_endWayPoint",
            "in": "formData",
            "required": false,
            "type" : "string",
            "description": "WayPoint id"
          },
          {
            "name": "_tollRoad",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "TollRoad id"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip object",
            "schema": {
              "$ref": "#/definitions/Trip"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/trip/paymentHistory": {
      "post": {
        "description": "Get trips by range of payment date",
        "tags": [
          "Trip"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "User id"
          },
          {
            "name": "from",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "Payment date from which to search"
          },
          {
            "name": "to",
            "in": "formData",
            "required": true,
            "type" : "string",
            "description": "Payment date to which to search"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of trips objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TripPaymentHistory"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/trip/{userId}/notPayed": {
      "get": {
        "description": "Get all notPayed trips for specified user",
        "tags": [
          "Trip"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of trips objects and amount",
            "schema": {
              "type": "object",
              "properties": {
                "trips": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TripPaymentHistory"
                  }
                },
                "amount": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payment/card": {
      "post": {
        "description": "Added new card. If it is first card, it will create customer profile",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "payment card data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardData"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User object",
            "schema": {
              "type": "object",
              "properties": {
                "customerProfileId": {
                  "type": "string"
                },
                "paymentProfiles": {
                  "type": "array",
                  "items": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "paymentProfileId": {
                          "type": "string"
                        },
                        "cardNum": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete card",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "paymentProfileId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successfully"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payment/charge": {
      "post": {
        "description": "Make payment request",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "data for making charge request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChargeRequest"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payment/{userId}/cards": {
      "get": {
        "description": "Get all user cards",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "paymentProfileId": {
                    "type": "string"
                  },
                  "cardNum": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payment/enable": {
      "post": {
        "description": "Enable subscription",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "data for enabling subscription",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "paymentProfileId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict. Subscription already exist",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/payment/disable": {
      "post": {
        "description": "Disable subscription",
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "data for disabling subscription",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "paymentProfileId": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "auth token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ChargeRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "paymentProfileId": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "CardData": {
      "type": "object",
      "properties": {
        "creditCardNumber": {
          "type": "string"
        },
        "expirationMonth": {
          "type": "string"
        },
        "expirationYear": {
          "type": "string"
        },
        "cardCode": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "description": "Unique identifier."
        },
        "firstname": {
          "type": "string",
          "description": "User first name"
        },
        "lastname": {
          "type": "string",
          "description": "User last name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "emailValidate": {
          "type": "boolean",
          "description": "Email validation passed?"
        },
        "password": {
          "type": "string",
          "description": "User password (sha256 hash)"
        },
        "phone": {
          "type": "string",
          "description": "User phone"
        },
        "phoneCode": {
          "type": "string",
          "description": "Phone validation code (md5 hash)"
        },
        "phoneValidate": {
          "type": "boolean",
          "description": "Phone validation passed?"
        },
        "address": {
          "type": "string",
          "description": "Address"
        },
        "city": {
          "type": "string",
          "description": "city"
        },
        "state": {
          "type": "string",
          "description": "State"
        },
        "zipCode": {
          "type": "string",
          "description": "Zip code"
        },
        "driverLicense": {
          "type": "object",
          "properties": {
            "licensePlate": {
              "type": "string"
            },
            "vehicleClass": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "description": "the state of USA"
            }
          }
        },
        "photo": {
          "type": "string",
          "description": "link to image"
        },
        "token": {
          "type": "string",
          "description": "Auth token"
        },
        "source": {
          "type": "string",
          "description": "Source can takes the following values:\nepp - self registration with email, phone and password;\ngplus - OAuth2 from Google+;\nfacebook - OAuth from Facebook;\n"
        }
      }
    },
    "SignUpFields": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "description": "User name"
        },
        "lastname": {
          "type": "string",
          "description": "User name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "password": {
          "type": "string",
          "description": "User password"
        },
        "phone": {
          "type": "string",
          "description": "User phone"
        },
        "photo": {
          "type": "string",
          "description": "link to image"
        },
        "source": {
          "type": "string",
          "description": "Source can takes the following values:\nepp - self registration with email, phone and password;\ngplus - OAuth2 from Google+;\nfacebook - OAuth from Facebook;\n"
        }
      }
    },
    "SignInFields": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string",
          "description": "User phone"
        },
        "password": {
          "type": "string",
          "description": "User password"
        }
      }
    },
    "TollRoad": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Road name"
        },
        "wayPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WayPoint"
          }
        }
      }
    },
    "GetTollRoadResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Road name"
        },
        "wayPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WayPointWithoutTollPoints"
          }
        }
      }
    },
    "CreateTollRoadResponse" :{
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Road name"
        }
      }
    },
    "WayPoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "WayPoint name"
        },
        "latitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "longitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "tollPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TollPoint"
          }
        }
      }
    },
    "WayPointWithoutTollPoints": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "WayPoint name"
        },
        "latitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "longitude": {
          "type": "string",
          "description": "TollPoint latitude"
        }
      }
    },
    "TollPoint": {
      "type": "object",
      "properties": {
        "_wayPoint": {
          "type": "string",
          "description": "WayPoint id"
        },
        "name": {
          "type": "string",
          "description": "TollPoint name"
        },
        "latitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "longitude": {
          "type": "string",
          "description": "TollPoint latitude"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "Trip": {
      "type": "object",
      "properties": {
        "_user": {
          "type": "string",
          "description": "User id"
        },
        "_startWayPoint": {
          "type": "string",
          "description": "WayPoint id"
        },
        "_endWayPoint": {
          "type": "string",
          "description": "WayPoint id"
        },
        "_tollRoad": {
          "type": "object",
          "description": "Status of trip"
        },
        "status": {
          "type": "string",
          "description": "Status of trip"
        },
        "tripDate": {
          "type": "string",
          "description": "Date of trip"
        },
        "paymentDate": {
          "type": "string",
          "description": "Date of payment"
        },
        "_rate": {
          "type": "object",
          "description": "Rate object"
        },
        "_transaction": {
          "type": "string",
          "description": "Transaction id"
        }
      }
    },
    "TripPaymentHistory": {
      "type": "object",
      "properties": {
        "tollRoadName": {
          "type": "string",
          "description": "name of tollRoad"
        },
        "paymentDate": {
          "type": "string",
          "description": "Date of payment"
        },
        "cost": {
          "type": "string",
          "description": "cost of trip"
        },
        "_transaction": {
          "type": "string",
          "description": "Transaction id"
        }
      }
    },
    "PaymentHistoryFields": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "description": "User id"
        },
        "showAll": {
          "type": "boolean",
          "description": "If true show all history"
        },
        "range": {
          "type": "object",
          "description": "Range payment date",
          "properties": {
            "from": {
              "type": "string",
              "description": "Payment date from which to search"
            },
            "to": {
              "type": "string",
              "description": "Payment date to which to search"
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "err": {
          "type": "string"
        }
      }
    }
  }
}